{
  "_args": [
    [
      {
        "raw": "modern-syslog@~1.1.2",
        "scope": null,
        "escapedName": "modern-syslog",
        "name": "modern-syslog",
        "rawSpec": "~1.1.2",
        "spec": ">=1.1.2 <1.2.0",
        "type": "range"
      },
      "/home/elliott/src/js/dash"
    ]
  ],
  "_from": "modern-syslog@>=1.1.2 <1.2.0",
  "_id": "modern-syslog@1.1.4",
  "_inCache": true,
  "_location": "/modern-syslog",
  "_nodeVersion": "4.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/modern-syslog-1.1.4.tgz_1475263042441_0.517667688196525"
  },
  "_npmUser": {
    "name": "octet",
    "email": "vieuxtech@gmail.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "modern-syslog@~1.1.2",
    "scope": null,
    "escapedName": "modern-syslog",
    "name": "modern-syslog",
    "rawSpec": "~1.1.2",
    "spec": ">=1.1.2 <1.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/modern-syslog/-/modern-syslog-1.1.4.tgz",
  "_shasum": "b23edf7975f4393042a3e27d177d95cb6ccae7c1",
  "_shrinkwrap": null,
  "_spec": "modern-syslog@~1.1.2",
  "_where": "/home/elliott/src/js/dash",
  "author": {
    "name": "Sam Roberts",
    "email": "rsam@ca.ibm.com"
  },
  "bugs": {
    "url": "https://github.com/strongloop/modern-syslog/issues"
  },
  "dependencies": {
    "nan": "^2.0.5"
  },
  "description": "modern syslog - streaming, async, uses nan",
  "devDependencies": {
    "debug": "^2.1.2",
    "tap": "^1.3.2"
  },
  "directories": {},
  "dist": {
    "shasum": "b23edf7975f4393042a3e27d177d95cb6ccae7c1",
    "tarball": "https://registry.npmjs.org/modern-syslog/-/modern-syslog-1.1.4.tgz"
  },
  "gitHead": "bba6a20eb226d8dfdecf25bdb3ca96e583b42372",
  "gypfile": true,
  "homepage": "http://github.com/strongloop/modern-syslog",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bajtos",
      "email": "mbajtoss@gmail.com"
    },
    {
      "name": "chandadharap",
      "email": "chanda_dharap@yahoo.com"
    },
    {
      "name": "ibmcloud-admin",
      "email": "rmg@ca.ibm.com"
    },
    {
      "name": "kraman",
      "email": "kraman@gmail.com"
    },
    {
      "name": "octet",
      "email": "vieuxtech@gmail.com"
    },
    {
      "name": "rfeng",
      "email": "enjoyjava@gmail.com"
    },
    {
      "name": "ritch",
      "email": "skawful@gmail.com"
    },
    {
      "name": "rmg",
      "email": "r.m.graham@gmail.com"
    },
    {
      "name": "setogit",
      "email": "setogit@gmail.com"
    },
    {
      "name": "strongloop",
      "email": "strngops@us.ibm.com"
    },
    {
      "name": "superkhau",
      "email": "superkhau@gmail.com"
    }
  ],
  "name": "modern-syslog",
  "optionalDependencies": {},
  "os": [
    "!win32"
  ],
  "readme": "# modern syslog - streaming, async, native, uses nan\n\nThis is the only syslog library that:\n\n- Uses native bindings to the libc syslog API.\n- Is async, because the libc APIs can block on localhost IPC under load, but\n  that shouldn't block your app.\n- Can be used as a stream.\n- Has formatted log functions.\n- Uses nan, so supports node and io.js, and will continue to do so.\n- Is API compatible with [node-syslog][], from which I gathered inspiration\n  and owe thanks.\n\nDefault mask depends on system.\n\n## Installation\n\n    npm install --save modern-syslog\n\n## API\n\nFor detailed descriptions of the core functions, see [man 3\nsyslog](http://man7.org/linux/man-pages/man3/syslog.3.html).\n\nNote that syslog functions cannot fail, and neither throw errors, nor callback\nwith errors. This is consistent with the core functions, which do not have error\nreturn values.\n\n### log(priority, msg, callback)\n\n- `priority` {String|Number} OR of a level, and optionally, a facility.\n- `msg` {String|Buffer} Message to log.\n- `callback` {Function} Called after message is logged (no arguments).\n\n`priority` can be a String, in which case it will be looked up in\n`syslog.level`. It can also be a Number, in which case it is expected to be\na numeric value, such as `syslog.level.LOG_INFO`, optionally ORed with a\na numeric facility, such as `syslog.facility.LOG_LOCAL2`.\n\nSee below for formatted version of `log()`.\n\n### emerg(fmt, ...)\n### alert(fmt, ...)\n### crit(fmt, ...)\n### error(fmt, ...)\n### err(fmt, ...)\n### warn(fmt, ...)\n### warning(fmt, ...)\n### note(fmt, ...)\n### notice(fmt, ...)\n### info(fmt, ...)\n### debug(fmt, ...)\n\n- `fmt` {String} Arguments are formatted as `msg`, and passed to `log()`.\n\nConvenience functions, log level is pre-defined, facility uses default, either\nsystem default or that provided to `open()`, and message is formatted with\n`util.format()`.\n\n### new Stream(level, [facility])\n\n- `level` {String|Number} Level to log at.\n- `facility` {String|Number} Facility to log with, optional.\n\nReturns a writeable stream that logs all messages at the specified level and\nfacility.\n\n### open(ident, option, facility)\n\n- `ident` {String} Prepended to every message, usually program name.\n- `option` {Number} OR of flags from `syslog.options`.\n- `facility` {String|Number} Default facility to be used by `log()`.\n\nSet up defaults for log.\n\nCalling `open()` is optional, all arguments are provided with defaults, though\nthe defaults depend on the system (see man page).\n\n### close()\n\nClose the socket to the syslog system.\n\nCalling `close()` is optional, the socket is closed automatically by the\nsystem on exit.\n\n### upto(level)\n\n- `level` {String|Number} Level to log up to.\n\nLog all levels upto and including `level`.\n\n### setmask(mask)\n\n- `mask` {Number} OR of levels that should be logged.\n\nNot convenient to use but part of the low-level syslog API. See syslog man page\nfor details, and consider using `upto()` for most common use-cases.\n\n### curmask()\n\nReturns current log mask, see `setmask()`.\n\n### setMask(...)\n\nAvoid this, its for backwards compatibility with [node-syslog][].\n\n### init(...)\n\nAvoid this, its for backwards compatibility with [node-syslog][].\n\n## Properties\n\nSyslog properties are defined as a bi-directional map from String to Number, and\nfrom Number to String, so:\n\n- `syslog.level.LOG_DEBUG`: `7`, the numeric value of `LOG_DEBUG`\n- `syslog.level[7]`: `'LOG_DEBUG'`, string value of level `7`\n\n### syslog.level\n\nLevels are listed from highest priority, to lowest:\n\n- `LOG_EMERG`: System is unusable.\n- `LOG_ALERT`: Action must be taken immediately.\n- `LOG_CRIT`: Critical condition.\n- `LOG_ERR`: Error condition.\n- `LOG_WARNING`: Warning condition.\n- `LOG_NOTICE`: Normal, but significant, condition.\n- `LOG_INFO`: Informational message.\n- `LOG_DEBUG`: Debug-level message.\n\n### syslog.option\n\nObject of properties:\n\n- `LOG_CONS`: Log to console if there is error logging to syslog.\n- `LOG_PERROR`: Log to stderr as well as syslog. (no-op on Solaris)\n- `LOG_PID`: Log process' PID with each message.\n\nThese are unlikely to be useful, but are provided for completeness:\n\n- `LOG_NDELAY`: Open  the  connection  immediately (normally, the connection is\n  opened when the first message is logged).\n- `LOG_ODELAY`: The converse of `LOG_NDELAY`; opening of the connection is\n  delayed until the first message is logged (this is the default and need not be\n  specified).\n- `LOG_NOWAIT`: Archaic option that doesn't do anything on contemporary systems,\n  but is provided for backwards compatibility.\n\n### syslog.facility\n\n- `LOG_AUTH`\n- `LOG_AUTHPRIV` (not defined on all systems)\n- `LOG_CRON`\n- `LOG_DAEMON`\n- `LOG_FTP` (not defined on all systems)\n- `LOG_KERN`\n- `LOG_LOCAL0`\n- `LOG_LOCAL1`\n- `LOG_LOCAL2`\n- `LOG_LOCAL3`\n- `LOG_LOCAL4`\n- `LOG_LOCAL5`\n- `LOG_LOCAL6`\n- `LOG_LOCAL7`\n- `LOG_LPR`\n- `LOG_MAIL`\n- `LOG_NEWS`\n- `LOG_SYSLOG`\n- `LOG_USER`\n- `LOG_UUCP`\n\n[node-syslog]: https://www.npmjs.com/package/node-syslog\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/strongloop/modern-syslog.git"
  },
  "scripts": {
    "install": "node-gyp rebuild",
    "test": "tap test/test-*.js"
  },
  "tags": [
    "log",
    "logging",
    "nan",
    "syslog",
    "system"
  ],
  "version": "1.1.4"
}
